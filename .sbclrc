
(push :coreutils *features*)

#-quicklisp (load "~/quicklisp/setup.lisp")

(setf sb-int:*repl-prompt-fun* (lambda (stream) (format stream "~%Î» ")))


(if (member "--no-linedit" sb-ext:*posix-argv* :test 'equal)
  (setf sb-ext:*posix-argv* (remove "--no-linedit" sb-ext:*posix-argv* :test 'equal))
  (when (interactive-stream-p *terminal-io*)
    (require :sb-aclrepl)
    (ql:quickload "linedit" :silent t)
    (funcall (intern "INSTALL-REPL" :linedit) :wrap-current t :eof-quits t)))


(if (member "--without-pluto" sb-ext:*posix-argv* :test 'equal)
  (setf sb-ext:*posix-argv* (remove "--without-pluto" sb-ext:*posix-argv* :test 'equal))
  (progn
    (ql:quickload :charon :silent t)
    (use-package :charon)))

(when (member "--with-cl-repl" sb-ext:*posix-argv* :test 'equal)
  (setf sb-ext:*posix-argv* (remove "--with-cl-repl" sb-ext:*posix-argv* :test 'equal))
  (ql:quickload :cl-repl :silent t))

(when (member "--print-readably" sb-ext:*posix-argv* :test 'equal)
  (progn
    (setf sb-ext:*posix-argv* (remove "--print-readably" sb-ext:*posix-argv* :test 'equal))
    (setq *PRINT-READABLY* t)))


(if (member "--warnings" sb-ext:*posix-argv* :test 'equal)
  (setf sb-ext:*posix-argv* (remove "--warnings" sb-ext:*posix-argv* :test 'equal))
  (progn
    (declaim (sb-ext:muffle-conditions cl:warning))
    (declaim (sb-ext:muffle-conditions sb-ext:compiler-note))
    (setf sb-debug:*debug-beginner-help-p* nil)
    (setf sb-debug:*backtrace-frame-count* 5)))


